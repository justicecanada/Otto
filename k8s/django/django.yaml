apiVersion: v1
kind: ConfigMap
metadata:
  name: otto-configmap
  namespace: otto
data:
  STATIC_ROOT: "/data/static"
  MEDIA_ROOT: "/data/media"
  DEBUG: "True"
  SITE_URL: "https://aks-otto.canadacentral.cloudapp.azure.com"
  ENV: "DEV"
  LOG_LEVEL: "INFO"
  CELERY_LOG_LEVEL: "INFO"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  namespace: otto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
        - name: django-app-container
          image: jusdevottoaacr.azurecr.io/otto:latest
          imagePullPolicy: Always # IfNotPresent in PROD
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: otto-configmap
          env:
          - name: REDIS_HOST
            value: redis-service
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: djangosecretkey
          - name: OTTO_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: postgrespasswordkey
          - name: AZURE_OPENAI_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: openaiservicekey
          - name: AZURE_COGNITIVE_SERVICE_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cognitiveservicekey
          - name: AZURE_ACCOUNT_KEY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: storageaccountkey
          - name: COSMOSDB_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cosmosdbpasswordkey
          - name: COSMOSDB_DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: cosmosdbhostnamekey
          - name: ENTRA_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientidkey
          - name: ENTRA_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraclientsecretkey
          - name: ENTRA_AUTHORITY
            valueFrom:
              secretKeyRef:
                name: azure-keyvault-secrets
                key: entraauthoritykey
          volumeMounts:
            - name: secrets
              mountPath: "/mnt/secrets-store"
              readOnly: true
            - name: staticfiles-pv-storage
              mountPath: "/data/static"
            - name: media-pv-storage
              mountPath: "/data/media"
      volumes:
      - name: secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "azure-keyvault"
      - name: staticfiles-pv-storage
        persistentVolumeClaim:
          claimName: staticfiles-pvc
      - name: media-pv-storage
        persistentVolumeClaim:
          claimName: media-pvc
                
---

apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: otto
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: django-app
