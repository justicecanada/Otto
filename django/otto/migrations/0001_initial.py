# Generated by Django 5.0.7 on 2024-07-25 20:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("chat", "0002_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccessControlLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("upn", models.CharField(max_length=255)),
                (
                    "action",
                    models.CharField(
                        choices=[("C", "Create"), ("U", "Update"), ("D", "Delete")],
                        max_length=1,
                    ),
                ),
                ("can_view", models.BooleanField(default=False)),
                ("can_change", models.BooleanField(default=False)),
                ("can_delete", models.BooleanField(default=False)),
                ("content_object", models.CharField(max_length=255)),
                ("reason", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("modified_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="SecurityLabel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("name_en", models.CharField(max_length=50, null=True, unique=True)),
                ("name_fr", models.CharField(max_length=50, null=True, unique=True)),
                ("description", models.TextField()),
                ("description_en", models.TextField(null=True)),
                ("description_fr", models.TextField(null=True)),
                ("acronym", models.CharField(max_length=10, unique=True)),
                ("acronym_en", models.CharField(max_length=10, null=True, unique=True)),
                ("acronym_fr", models.CharField(max_length=10, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="UsageTerm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("term_text", models.CharField(max_length=2000)),
                ("term_text_en", models.CharField(max_length=2000, null=True)),
                ("term_text_fr", models.CharField(max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("upn", models.CharField(max_length=255, unique=True)),
                ("email", models.EmailField(max_length=254)),
                ("oid", models.CharField(max_length=255, null=True)),
                ("first_name", models.CharField(max_length=80)),
                ("last_name", models.CharField(max_length=80)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("accepted_terms_date", models.DateField(null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AccessControl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_view", models.BooleanField(default=False)),
                ("can_change", models.BooleanField(default=False)),
                ("can_delete", models.BooleanField(default=False)),
                ("object_id", models.UUIDField()),
                ("reason", models.CharField(blank=True, max_length=255, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="access_controls_modified_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="App",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("handle", models.CharField(blank=True, max_length=50, null=True)),
                ("name", models.CharField(max_length=200)),
                ("name_en", models.CharField(max_length=200, null=True)),
                ("name_fr", models.CharField(max_length=200, null=True)),
                ("prod_ready", models.BooleanField(default=False)),
                ("visible_to_all", models.BooleanField(default=True)),
                (
                    "user_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="auth.group",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("name_en", models.CharField(max_length=200, null=True)),
                ("name_fr", models.CharField(max_length=200, null=True)),
                ("description", models.TextField()),
                ("description_en", models.TextField(null=True)),
                ("description_fr", models.TextField(null=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("ai_assistant", "AI assistant"),
                            ("monitoring", "Monitoring"),
                            ("reporting", "Reporting"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "classification",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("url", models.CharField(max_length=200)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="otto.app"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[("feedback", "Feedback"), ("issue", "Issue")],
                        default="Please select an option",
                        max_length=50,
                    ),
                ),
                ("app", models.TextField(max_length=200)),
                ("otto_version", models.CharField(max_length=12)),
                ("feedback_message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "chat_message",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="message",
                        to="chat.message",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("heading", models.CharField(blank=True, max_length=255, null=True)),
                ("progress", models.IntegerField(blank=True, null=True)),
                ("link", models.CharField(blank=True, max_length=255, null=True)),
                ("category", models.CharField(blank=True, max_length=50, null=True)),
                ("level", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserOptions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(default="en", max_length=50)),
                ("chat_settings_width", models.IntegerField(default=0)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="otto_user_email_c51a30_idx"),
        ),
        migrations.AddIndex(
            model_name="accesscontrol",
            index=models.Index(
                fields=["user", "object_id"], name="otto_access_user_id_b55faa_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accesscontrol",
            unique_together={("user", "object_id")},
        ),
    ]
